```bash
#!/bin/bash

# Batch Processing Script - 0x04
# Fetches Pok√©mon data in parallel and waits for all background processes to complete.

POKEMONS=("pikachu" "bulbasaur" "charmander" "squirtle")
OUTPUT_DIR="pokemon_data"

# Create output directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"

# Function to fetch data for a single Pok√©mon
fetch_pokemon_data() {
    local pokemon=$1
    local output_file="$OUTPUT_DIR/${pokemon}.json"

    echo "üîç Fetching data for $pokemon..."
    response=$(curl -s -w "%{http_code}" -o "$output_file" "https://pokeapi.co/api/v2/pokemon/$pokemon")
    http_code=${response: -3}

    if [ "$http_code" -eq 200 ]; then
        echo "‚úÖ Successfully fetched $pokemon data (saved to $output_file)"
    else
        echo "‚ùå Failed to fetch $pokemon (HTTP $http_code)"
        echo "$pokemon" >> failed_requests.log
        rm -f "$output_file"
    fi
}

# Run all fetches in parallel
for pokemon in "${POKEMONS[@]}"; do
    fetch_pokemon_data "$pokemon" &
done

# Wait for all background processes to finish
wait

echo "-----------------------------------"
echo "All Pok√©mon data fetching complete."

# Check if output directory is not empty
if [ -d "$OUTPUT_DIR" ] && [ "$(ls -A "$OUTPUT_DIR")" ]; then
    echo "‚úÖ Output directory '$OUTPUT_DIR' exists and contains files."
else
    echo "‚ö†Ô∏è No data found. Output directory is empty or missing."
fi
```

